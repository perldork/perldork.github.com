<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Padrino | Semintelligent - Max Schubert]]></title>
  <link href="http://perldork.github.io/blog/categories/padrino/atom.xml" rel="self"/>
  <link href="http://perldork.github.io/"/>
  <updated>2014-02-27T20:15:10-05:00</updated>
  <id>http://perldork.github.io/</id>
  <author>
    <name><![CDATA[Max Schubert]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HOW-TO: Rack::Attack With Dalli and Padrino]]></title>
    <link href="http://perldork.github.io/blog/2014/02/25/how-to-rack-attack-with-dalli-and-padrino/"/>
    <updated>2014-02-25T23:24:42-05:00</updated>
    <id>http://perldork.github.io/blog/2014/02/25/how-to-rack-attack-with-dalli-and-padrino</id>
    <content type="html"><![CDATA[<p>We use <a href="https://github.com/mperham/dalli">Dalli</a> for memcached-based route caching with
<a href="http://www.padrinorb.com/">Padrino</a> 0.12. I wanted to add rate throttling for all /api
route handlers to our app and wanted to use Dalli for that as well.</p>

<p>I found <a href="https://github.com/kickstarter/rack-attack">Rack::Attack</a>, a
really nice Rack-based gem that allows for connection throttling,
blacklisting and whitelisting of clients.  Cool stuff, perfect for our
needs.  Except it expects the caching layer to conform to the
ActiveSupport::Cache::Store interface:</p>

<p><blockquote><p>Note that Rack::Attack.cache is only used for throttling; not<br/>blacklisting &amp; whitelisting. Your cache store must implement increment<br/>and write like ActiveSupport::Cache::Store.</p></blockquote></p>

<p>Darn!  Oh, wait, not so bad.  But I don&rsquo;t want to have to do inline
creation of the client etc in app/app.rb, especially because I&rsquo;m likely
to have different throttling requirements for different environments.</p>

<h3>Modules and blocks to the rescue!</h3>

<ol>
<li>Create a subclass for the Dalli client that conforms to the ActiveSupport API.</li>
<li>Create a helper method that can be used inline in app/app.rb that
takes a block with an environment-specific policy.</li>
<li>Wrap the use and cache client creation so it doesn&rsquo;t have to be
repeated in app/app.rb</li>
</ol>


<h5>Our security mixin module with configure_security helper</h5>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lib/security.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module Security&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">dalli</span><span class="o">/</span><span class="n">client</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  @@store = nil&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Dalli client does not conform to cache client</span>
</span><span class='line'>  <span class="c1"># interface Rack::Attack expects &amp;ndash; so add wrappers</span>
</span><span class='line'>  <span class="c1"># for methods.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">class</span> <span class="nc">MemStore</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">Dalli</span><span class="p">:</span><span class="ss">:Client</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;def decrement( key, step, options )</span>
</span><span class='line'><span class="sr">  decr( key, step, options[ :expires_in ] )</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">def increment( key, step, options )</span>
</span><span class='line'><span class="sr">  incr( key, step, options[ :expires_in ], nil )</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">def write( key, value, options )</span>
</span><span class='line'><span class="sr">  # Have to use raw =&amp;gt; true for write or we get marshall</span>
</span><span class='line'><span class="sr">  # errors as Dalli marshals the Fixnum object instead of</span>
</span><span class='line'><span class="sr">  # sending the raw integer value</span>
</span><span class='line'><span class="sr">  set( key, value, options[ :expires_in ], :raw =&amp;gt; true )</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">initialize_store</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;if @@store.nil?</span>
</span><span class='line'><span class="sr">  use Rack::Attack</span>
</span><span class='line'><span class="sr">  @@store = Rack::Attack.cache.store = MemStore.new %{localhost:11211}</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Called from app/app.rb</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">configure_security</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;initialize_store</span>
</span><span class='line'><span class="sr">yield( Rack::Attack )</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h5>Now use it in app/app.rb</h5>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/app.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;self.extend Security # lib/se</span><span class="n">curity</span><span class="o">.</span><span class="n">rb</span> <span class="o">-</span> <span class="n">adds</span> <span class="n">configure_security</span> <span class="nb">method</span>
</span><span class='line'>
</span><span class='line'><span class="n">configure</span> <span class="ss">:demo</span><span class="p">,</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:api</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Rate limit calls to /api URLs to 2 a second in all envs.</span>
</span><span class='line'>  <span class="n">configure_security</span> <span class="k">do</span> <span class="o">|</span><span class="n">client</span><span class="o">|</span>
</span><span class='line'>    <span class="n">client</span><span class="o">.</span><span class="n">throttle</span><span class="p">(</span><span class="s1">&#39;req/ip&#39;</span><span class="p">,</span> <span class="ss">:limit</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">:period</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">1</span><span class="o">.</span><span class="n">second</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">req</span><span class="o">|</span>
</span><span class='line'>      <span class="c1"># If we return false nothing is cached ( no rate limiting )</span>
</span><span class='line'>      <span class="c1"># - only rate limit calls to /api URLs</span>
</span><span class='line'>      <span class="n">req</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">index</span><span class="p">(</span> <span class="sx">%{/api}</span> <span class="p">)</span><span class="o">.</span><span class="n">nil?</span> <span class="p">?</span> <span class="kp">false</span> <span class="p">:</span> <span class="n">req</span><span class="o">.</span><span class="n">ip</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Pry With Padrino]]></title>
    <link href="http://perldork.github.io/blog/2012/06/04/using-pry-with-padrino/"/>
    <updated>2012-06-04T00:00:00-04:00</updated>
    <id>http://perldork.github.io/blog/2012/06/04/using-pry-with-padrino</id>
    <content type="html"><![CDATA[<p>Pry is a really powerful replacement for IRB – I love using it with Rails. I recently started working with Padrino and of course had to have it working there as well.</p>

<p>Pry will read and execute a .pryrc file that exists in the current directory as it boots – here is my Padrino specific .pryrc file – it boots your app just like you’d get in Rails using Pry:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>.pryrc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">load</span> <span class="sx">%{./config/boot.rb}</span>
</span><span class='line'><span class="nb">load</span> <span class="sx">%{./config/database.rb}</span>
</span><span class='line'><span class="nb">load</span> <span class="sx">%{./config/apps.rb}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;require &amp;lsquo;padrino-core/</span><span class="n">cli</span><span class="o">/</span><span class="n">console</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">padrino</span><span class="o">-</span><span class="n">core</span><span class="o">/</span><span class="n">cli</span><span class="o">/</span><span class="n">adapter</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">padrino</span><span class="o">-</span><span class="n">core</span><span class="o">/</span><span class="n">cli</span><span class="o">/</span><span class="n">base</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">padrino</span><span class="o">-</span><span class="n">core</span><span class="o">/</span><span class="n">cli</span><span class="o">/</span><span class="n">rake</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">padrino</span><span class="o">-</span><span class="n">core</span><span class="o">/</span><span class="n">cli</span><span class="o">/</span><span class="n">rake_tasks</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;def app</span>
</span><span class='line'><span class="sr">  Padrino.application</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">start</span><span class="p">(</span> <span class="n">server</span> <span class="o">=</span> <span class="ss">:puma</span> <span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="sx">%{Type Ctrl-C to background server}</span>
</span><span class='line'>  <span class="no">Padrino</span><span class="o">.</span><span class="n">run!</span> <span class="ss">server</span><span class="p">:</span> <span class="n">server</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">Exception</span> <span class="o">=&gt;</span> <span class="n">e</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="sx">%{Problem starting server: </span><span class="si">#{</span> <span class="n">e</span><span class="o">.</span><span class="n">to_s</span> <span class="si">}</span><span class="sx">}</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;def stop</span>
</span><span class='line'><span class="sr">  puts %{Stopping server}</span>
</span><span class='line'><span class="sr">  threads = Thread.list</span>
</span><span class='line'><span class="sr">  threads.shift</span>
</span><span class='line'><span class="sr">  threads.each { |t| Thread.kill t }</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">save_to</span><span class="p">(</span> <span class="n">file</span><span class="p">,</span> <span class="n">contents</span> <span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span> <span class="n">file</span><span class="p">,</span> <span class="sx">%{w}</span> <span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="n">contents</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Padrino Before and After Blocks in Rspec Tests]]></title>
    <link href="http://perldork.github.io/blog/2012/02/05/using-padrino-before-and-after-blocks-in-rspec-tests/"/>
    <updated>2012-02-05T00:00:00-05:00</updated>
    <id>http://perldork.github.io/blog/2012/02/05/using-padrino-before-and-after-blocks-in-rspec-tests</id>
    <content type="html"><![CDATA[<p>We add in code that allows us to send mock parameters to controller actions via Capybara tests for all controllers while testing -so we can simulate session state ( for example &ndash; user being logged in ). In Rails you do this by re-opening ApplicationController in spec/spec_helper.rb and adding in a before_filter. In Padrino you can do this by adding custom code to app.rb in a before block &ndash; the before block is called for every controller action.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app/app.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">configure</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;params.keys.each do |param|</span>
</span><span class='line'><span class="sr">  if param =~ /</span><span class="o">^</span><span class="n">mock_</span><span class="o">/</span>
</span><span class='line'>    <span class="n">mock_param</span> <span class="o">=</span> <span class="n">param</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/mock_/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">session</span><span class="o">[</span> <span class="n">mock_param</span> <span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span> <span class="n">param</span> <span class="o">]</span>
</span><span class='line'>    <span class="n">logger</span><span class="o">.</span><span class="n">debug</span> <span class="sx">%{ </span><span class="si">#{</span><span class="n">mock_param</span><span class="si">}</span><span class="sx"> set to </span><span class="si">#{</span><span class="n">params</span><span class="o">[</span> <span class="n">param</span> <span class="o">]</span><span class="si">}</span><span class="sx">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
